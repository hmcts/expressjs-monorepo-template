name: OSV Scanner

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Run OSV Scanner
        uses: google/osv-scanner-action@v1
        id: osv-scanner
        with:
          to-scan: .
          format: sarif
          output: osv-scanner-report.sarif
        continue-on-error: true
      
      - name: Upload OSV Scanner report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: osv-scanner-report
          path: osv-scanner-report.sarif
          retention-days: 30
      
      - name: Upload SARIF results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: osv-scanner-report.sarif
      
      - name: Check for critical vulnerabilities
        run: |
          # Run OSV Scanner again in JSON format to check severity
          npx --yes osv-scanner --format json --output osv-results.json . || true
          
          # Check if the file exists and parse for critical vulnerabilities
          if [ -f "osv-results.json" ]; then
            # Count critical vulnerabilities
            critical_count=$(jq '[.results[]?.packages[]?.vulnerabilities[]? | select(.database_specific.severity == "CRITICAL" or .severity[]?.type == "CVSS_V3" and .severity[]?.score >= 9.0)] | length' osv-results.json 2>/dev/null || echo "0")
            
            echo "Found $critical_count critical vulnerabilities"
            
            if [ "$critical_count" -gt 0 ]; then
              echo "❌ Critical vulnerabilities detected!"
              jq '.results[]?.packages[]?.vulnerabilities[]? | select(.database_specific.severity == "CRITICAL" or .severity[]?.type == "CVSS_V3" and .severity[]?.score >= 9.0) | {id: .id, summary: .summary, severity: .database_specific.severity}' osv-results.json 2>/dev/null || true
              exit 1
            else
              echo "✅ No critical vulnerabilities found"
            fi
          else
            echo "⚠️ Could not generate vulnerability report for severity check"
          fi