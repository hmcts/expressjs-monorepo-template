name: E2E Tests

on:
  pull_request:
    branches: [master, main]
  push:
    branches: [master, main]

concurrency:
  group: e2e-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write
  pull-requests: write
  actions: read

jobs:
  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest

    env:
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22.19.0'

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Generate Prisma client
        run: yarn db:generate

      - name: Restore Playwright browsers cache
        uses: actions/cache/restore@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('e2e-tests/package.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: yarn workspace e2e-tests run playwright install chromium --with-deps

      - name: Install Playwright system dependencies (if cached)
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: yarn workspace e2e-tests run playwright install-deps chromium

      - name: Save Playwright browsers cache
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('e2e-tests/package.json') }}

      - name: Run E2E tests
        id: e2e-tests
        run: |
          # Capture all output including server logs
          set -o pipefail
          yarn workspace e2e-tests run test:e2e 2>&1 | tee e2e-server-logs.txt

      # Publish test results to PR checks
      - name: Test Report
        id: test-report
        uses: dorny/test-reporter@v2
        if: always()
        with:
          name: E2E Test Results
          path: e2e-tests/junit-results.xml
          reporter: java-junit
          fail-on-error: false

      # Upload artifacts on failure for debugging   
      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        if: always() && steps.e2e-tests.outcome == 'failure'
        with:
          name: playwright-test-results
          path: |
            e2e-tests/test-results/
            e2e-tests/playwright-report/
          retention-days: 7

      # Upload application logs on failure for debugging
      - name: Upload application logs
        uses: actions/upload-artifact@v4
        if: always() && steps.e2e-tests.outcome == 'failure'
        with:
          name: application-logs
          path: e2e-server-logs.txt
          retention-days: 7

      # Publish test results as a PR comment
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always() && github.event_name == 'pull_request'
        with:
          files: e2e-tests/junit-results.xml
          check_name: E2E Test Results
          comment_title: ðŸŽ­ Playwright E2E Test Results
          fail_on: nothing